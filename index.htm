<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="generator" content="pandoc">
        <meta name="author" content="Peter Steinbach" />
            <title>The Performance Addict's Toolbox</title>
    <meta name="description" content="The Performance Addict's Toolbox">
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <!-- Bootstrap core CSS -->
    <link rel="stylesheet" href="css/bootstrap.min.css"/>
    
    <link rel="stylesheet" href="css/reveal.css"/>
        <link rel="stylesheet" href="css/theme/black.css" id="theme">
    
    <link rel="stylesheet" href="css/my_reveal_overrides.css" id="theme">

        <link rel="stylesheet" href="lib/css/zenburn.css">
    
    <!-- <link rel="stylesheet" href="my_reveal_overrides.css"/> -->
    
    <!-- If the query includes 'print-pdf', include the PDF print sheet -->
    <script>
      	var link = document.createElement( 'link' );
		link.rel = 'stylesheet';
		link.type = 'text/css';
		link.href = window.location.search.match( /print-pdf/gi ) ? 'css/print/pdf.css' : 'css/print/paper.css';
		document.getElementsByTagName( 'head' )[0].appendChild( link );
    </script>
    <!--[if lt IE 9]>
	<script src="reveal.js/lib/js/html5shiv.js"></script>
	<![endif]-->
          </head>
  <body>
        <div class="reveal">
      <div class="slides">

		<section>
	  <h1 class="title">The Performance Addict's Toolbox</h1>
	  	  <p>
	    <b>Peter Steinbach</b><br>
	    <emph>(Scionics Computer Innovation GmbH)</emph><br>
	    <a href="mailto:steinbach@scionics.de">steinbach@scionics.de</a>
	    <br><br>
	  </p>
	  
	  <h3 class="date">Nov 11, 2017, MeetingC++ 2017, Berlin</h3>
	</section>
		
	<section id="agenda" class="slide level2">
<h1>Agenda</h1>
<ol type="1">
<li><code>whoami</code> and Motivation</li>
<li>Performance outside-in</li>
<li>Performance inside-out</li>
<li>Benchmarks and how to create them</li>
</ol>
</section>
<section><section id="whoami-and-motivation" class="titleslide slide level1"><h1>whoami and Motivation</h1></section><section id="disclaimer" class="slide level2">
<h1>Disclaimer</h1>
<div class="container-fluid">
<div class="row justify-content-center">
<div class="col">
<figure>
<img src="img/opensource-550x475.png" class="figure-img img-fluid" style="width:40.0%" />
</figure>
<p><strong><a href="https://github.com/psteinb/meetingcpp2017">github.com/psteinb/meetingcpp2017</a></strong></p>
</div>
</div>
</div>
<aside class="notes">
<p>report bugs and questions there!</p>
</aside>
</section><section id="whoami" class="slide level2">
<h1><code>whoami</code></h1>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<figure>
<img src="img/events_header_m_quarter.jpg" class="figure-img img-fluid" style="width:50.0%" />
</figure>
</div>
<div class="col">
<p><strong><a href="www.scionics.de">Scionics Computer Innovation GmbH</a></strong></p>
<ul>
<li>software and consulting company</li>
<li>founded in 2001 in Dresden, Germany</li>
<li>expertise in data analysis, bioinformatics, image analysis, HPC, ...</li>
</ul>
</div>
</div>
</div>
<aside class="notes">
<ul>
<li>2h by car south of Berlin<br />
</li>
<li>NEXT: biggest client = CBG</li>
</ul>
</aside>
</section><section id="our-client" class="slide level2">
<h1>Our Client</h1>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<figure>
<img src="img/800px-MPI-CBG_building_outside_4pl.jpg" alt="MPI for Molecular Cell Biology and Genetics" class="figure-img img-fluid" style="width:100.0%" /><figcaption>MPI for Molecular Cell Biology and Genetics</figcaption>
</figure>
<p><a href="www.mpi-cbg.de">mpi-cbg.de</a></p>
</div>
<div class="col">
<ul>
<li>500+ staff</li>
<li>my role: <em>Scientific Software Engineer</em></li>
<li>support users on our HPC infrastructure</li>
<li>software projects related to performance (think multi-threaded, GPUs, ..)</li>
</ul>
</div>
</div>
</div>
<aside class="notes">
<ul>
<li>biggest client</li>
<li>NEXT: How does my day look like sometimes ...</li>
</ul>
</aside>
</section></section>
<section><section id="performance-outside-in" class="titleslide slide level1"><h1>Performance Outside-In</h1></section><section id="one-day-as-a-performance-engineer" class="slide level2">
<h1>One day as a Performance Engineer</h1>
<figure>
<img src="img/flickr_ORourke_2_busy_to_improve_1200px.png" alt="Alan O&#39;Rourke, Too Busy To Improve - Performance Management - Square Wheels, CC" class="figure-img img-fluid" style="width:70.0%" /><figcaption>Alan O'Rourke, <a href="https://www.flickr.com/photos/toddle_email_newsletters/15412982829/in/photostream/">Too Busy To Improve - Performance Management - Square Wheels</a>, CC</figcaption>
</figure>
<aside class="notes">
<ul>
<li>scientists typically develop algorithms (to publish)</li>
<li>performance is important for usablity</li>
</ul>
</aside>
</section><section id="once-in-a-while" class="slide level2" data-background-image="img/frustration-cry-1682140_1920.jpg">
<h1>Once in a while</h1>
<div class="container">
<div class="row align-items-center">
<div class="col">
<pre><code>From: doe@theinstitute.de
Subject: Cluster is slow
Date: Fri, 20 Oct 2017 12:03:21 +0200
To: hpcsupport@theinstitute.de

Hi,

what is going on with the cluster? My application is running
slow since yesterday.
Could you have a look at it please?

Thanks,
John</code></pre>
</div>
</div>
</div>
<aside class="notes">
<ul>
<li>speed is a subjective measure</li>
<li>performance is a matter of perspective</li>
<li>note: description for reproducibility missing</li>
<li>https://youtu.be/FnGCDLhaxKU?t=6152</li>
</ul>
</aside>
</section><section id="challenge-find-the-cause-of-the-performance-regression-without-looking-at-the-code" class="slide level2" data-background-image="img/binary-958952_1920_greybackground.jpg">
<h1>Challenge: Find the cause of the performance regression without looking at the code</h1>
</section><section id="high-level-overview" class="slide level2">
<h1>High Level Overview</h1>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<figure>
<img src="img/htop_in_action.png" alt="htop, free et al" class="figure-img img-fluid" style="width:90.0%" /><figcaption><a href="http://hisham.hm/htop/">htop</a>, <a href="https://linux.die.net/man/1/free">free</a> et al</figcaption>
</figure>
</div>
<div class="col">
<figure>
<img src="img/Win7-tskman-perf.png" alt="Task Manager, Image courtesy of Fergie4000, CC-BY 3.0" class="figure-img img-fluid" style="width:80.0%" /><figcaption>Task Manager, <a href="https://en.wikipedia.org/wiki/File:Win7-tskman-perf.png">Image</a> courtesy of Fergie4000, CC-BY 3.0</figcaption>
</figure>
</div>
</div>
</div>
</section><section id="reference-numbers" class="slide level2">
<h1>Reference Numbers</h1>
<pre><code>$ dd if=/dev/zero of=/tmp/just_zeros bs=1G count=2
2+0 records in
2+0 records out
2147483648 bytes (2.1 GB) copied, 2.94478 s, 729 MB/s

$ dd if=/dev/zero of=/dev/shm/steinbac.zeros bs=1G count=2
2+0 records in
2+0 records out
2147483648 bytes (2.1 GB) copied, 1.14782 s, 1.9 GB/s</code></pre>
<p>Â </p>
<p><strong>What can your hardware typically do?</strong></p>
<p><code>dd</code>, <code>iperf</code>, <code>memhog</code>, ...</p>
<aside class="notes">
<ul>
<li>to search for the bottleneck, know your performance</li>
</ul>
<p>]</p>
</section><section id="profile-with-perf" class="slide level2">
<h1>Profile with <a href="https://perf.wiki.kernel.org/index.php/Main_Page">perf</a></h1>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col-8">
<pre><code>$ perf record -g ./my-slow-binary
[ perf record: Woken up 1 times to write data ]
[ perf record: Captured and wrote 0.023 MB perf.data (75 samples) ]
$ perf report --stdio
no symbols found in /usr/bin/dd, maybe install a debug package?
# ...
# Total Lost Samples: 0
#
# Samples: 75  of event &#39;cycles:u&#39;
# Event count (approx.): 1839654
#
# Children      Self  Command  Shared Object      Symbol           
# ........  ........  .......  .................  ................
#
    20.18%    20.18%  dd       [kernel.kallsyms]  [k] page_fault
            |          
             --19.77%--0
                       _int_realloc
                       page_fault
</code></pre>
</div>
<div class="col-4">
<ul>
<li>instrument CPU performance counters, tracepoints and system probes</li>
<li>lightweight sample based profiling</li>
<li>per task, per CPU and per-workload counters</li>
<li>on windows: <a href="https://docs.microsoft.com/en-us/windows-hardware/test/wpt/wpt-getting-started-portal">xperf</a></li>
</ul>
</div>
</div>
</div>
</section><section id="perf-reloaded-with-flamegraphs" class="slide level2">
<h1><a href="https://perf.wiki.kernel.org/index.php/Main_Page">perf</a> Reloaded with <a href="https://github.com/brendangregg/FlameGraph">FlameGraphs</a></h1>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col-8">
<pre><code>$ perf record -g ./my-slow-binary
[ perf record: Woken up 1 times to write data ]
[ perf record: Captured and wrote 0.023 MB perf.data (75 samples) ]
$ perf script &gt; out.perf
$ ./stackcollapse-perf.pl out.perf &gt; out.folded
$ ./flamegraph.pl out.folded &gt; perf_samples.svg</code></pre>
</div>
<div class="col-4">
<ul>
<li>visualisation technique conceived by <a href="https://github.com/brendangregg">Brendan Gregg</a> (Netflix)</li>
<li>seemless integration into perf, dtrace, systemtap, XCode Instruments, Lightweight Java Profiler, Microsoft Visual Studio profiles, ...</li>
<li>based on collected perf samples and the stacktrace they were collected in</li>
</ul>
</div>
</div>
</div>
</section><section id="ethereum-mining-as-flamegraph" class="slide level2">
<h1>Ethereum Mining <a href="figure/flamegraph/ethminer-cuda-simulate.svg">as FlameGraph</a></h1>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<p><object type="image/svg+xml" data="figure/flamegraph/ethminer-cuda-simulate.svg" width="90%"> Your browser does not support SVG </object></p>
</div>
</div>
</div>
<div class="container-fluid">
<div class="row align-items-start">
<div class="col">
<ul>
<li>(x axis) current stack level in alphabetical order</li>
</ul>
</div>
<div class="col">
<ul>
<li>(y axis) number of samples in that stacktrace level</li>
</ul>
</div>
</div>
</div>
<aside class="notes">
<ul>
<li>alphetical ordering inside each stacktrace level</li>
</ul>
</aside>
</section><section id="hpc-users-slow-application" class="slide level2">
<h1>HPC user's slow application</h1>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<p><object type="image/svg+xml" data="figure/flamegraph/hpc_user.svg" width="90%"> Your browser does not support SVG </object></p>
</div>
</div>
</div>
<aside class="notes">
<ul>
<li>performance profile shows i/o spinning wildly</li>
<li>storage hardware was malfunctioning</li>
<li><p>this graph = cpu_cycles; alternative = i/o flamegraph</p></li>
<li><p><strong>so far</strong>: didn't touch the source code or build it</p></li>
</ul>
</aside>
</section></section>
<section><section id="performance-inside-out" class="titleslide slide level1" data-background-image="img/Spirit_of_St._Louis_Jacksonville_Florida_wikicommons.jpg" style="background: rgba(105,105,105, 0.8); border-radius: 20px;"><h1>Performance Inside-Out</h1></section><section id="high-diversity-of-tools" class="slide level2" data-background-image="img/dreamstime-in-c++.jpg" data-background-position="right" style="background: rgba(105,105,105, 0.8); border-radius: 20px;">
<h1>High Diversity of Tools!</h1>
<aside class="notes">
<ul>
<li>tricky to recommend one only</li>
<li>tricky to find cross platform one</li>
<li>typical: develop/profile on one platform, choose deploy on all</li>
<li>now: brief tour</li>
</ul>
</aside>
</section><section id="textual-output-gprof" class="slide level2">
<h1>Textual output, <code>gprof</code></h1>
<pre><code>Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
 26.71      1.02     1.02                             void my_axpy&lt;6u, vector&lt;float&gt;, vector&lt;float&gt;, vector&lt;float&gt; &gt;(vector&lt;float&gt;&amp;, vector&lt;float&gt; const&amp;, vector&lt;float&gt; const&amp;)
 26.71      2.05     1.02                             void my_axpy&lt;2u, vector&lt;float&gt;, vector&lt;float&gt;, vector&lt;float&gt; &gt;(vector&lt;float&gt;&amp;, vector&lt;float&gt; const&amp;, vector&lt;float&gt; const&amp;)
 23.83      2.96     0.91                             void my_axpy&lt;8u, vector&lt;float&gt;, vector&lt;float&gt;, vector&lt;float&gt; &gt;(vector&lt;float&gt;&amp;, vector&lt;float&gt; const&amp;, vector&lt;float&gt; const&amp;)
 23.04      3.84     0.88                             void my_axpy&lt;4u, vector&lt;float&gt;, vector&lt;float&gt;, vector&lt;float&gt; &gt;(vector&lt;float&gt;&amp;, vector&lt;float&gt; const&amp;, vector&lt;float&gt; const&amp;)
  0.00      3.84     0.00        1     0.00     0.00  _GLOBAL__sub_I_main</code></pre>
<p>Profile from <a href="https://github.com/petergottschling/discovering_modern_cpp/blob/master/c%2B%2B11/vector_unroll_example.cpp">Peter Gottschling's example on vector unrolling</a>.</p>
</section><section id="simple-graphical-output-perftools" class="slide level2">
<h1>Simple Graphical output, <code>perftools</code></h1>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<p><!-- <object type="image/svg+xml" data="figure/profiling/perftools/pprof21143.0.svg" width="90%"> --> <!-- Your browser does not support SVG --> <!-- </object> --></p>
<figure>
<img src="figure/profiling/perftools/pprof21143.0.png" class="figure-img img-fluid" style="width:90.0%" />
</figure>
</div>
</div>
</div>
<p>Profile from <a href="https://github.com/petergottschling/discovering_modern_cpp/blob/master/c%2B%2B11/vector_unroll_example.cpp">Peter Gottschling's example on vector unrolling</a>.</p>
</section><section id="using-a-pseudo-vm-kcachegrindvalgrind" class="slide level2">
<h1>Using a pseudo-VM, <code>kcachegrind/valgrind</code></h1>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<figure>
<img src="img/kcachegrind-screenshot.png" class="figure-img img-fluid" style="width:80.0%" />
</figure>
</div>
</div>
</div>
<p>Profile from <a href="https://github.com/petergottschling/discovering_modern_cpp/blob/master/c%2B%2B11/vector_unroll_example.cpp">Peter Gottschling's example on vector unrolling</a>.</p>
<aside class="notes">
<ul>
<li>pseudo-vm is the only way to obtain a line profile in C++</li>
</ul>
</aside>
</section><section id="using-flamegraphs-hotspot" class="slide level2">
<h1>Using flamegraphs, <code>hotspot</code></h1>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<figure>
<img src="img/hotspot.png" class="figure-img img-fluid" style="width:80.0%" />
</figure>
</div>
</div>
</div>
<aside class="notes">
<ul>
<li>thanks to KDAB</li>
<li>well done tool with bright future</li>
</ul>
</aside>
</section><section id="proprietary-tools" class="slide level2">
<h1>Proprietary tools</h1>
<p>... some nice images ...</p>
<aside class="notes">
<ul>
<li>NEXT: hotspot found</li>
</ul>
</aside>
</section><section id="found-a-hot-spot" class="slide level2" data-background-image="img/1024px_light-bulb-light-old.jpg" data-background-position="right">
<h1>Found a hot spot!</h1>
<aside class="notes">
<ul>
<li>search finished, critical function/class identified</li>
<li>NOW: find out why it is slow?</li>
</ul>
</aside>
</section><section id="danger-zone-of-mental-models" class="slide level2" data-background-image="img/slip-up-danger-careless-slippery.jpg" data-background-position="right" style="background: rgba(105,105,105, 0.8); border-radius: 20px;">
<h1>Danger zone of mental models</h1>
<aside class="notes">
<ul>
<li>mental models are often wrong or outdated</li>
<li>with a colleaque or rubber duck, come up with falsifyable hypothesis!</li>
</ul>
</aside>
</section><section id="inspect-assembly" class="slide level2">
<h1>Inspect Assembly?</h1>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<figure>
<img src="img/compiler_explorer.png" class="figure-img img-fluid" style="width:100.0%" />
</figure>
</div>
</div>
</div>
<aside class="notes">
<ul>
<li>inspecting assembly tough!</li>
<li>play with -O flags to get a feeling</li>
<li>mental hardware model can still be wrong</li>
<li>asm can only partially falsify hypothesis</li>
</ul>
</aside>
</section><section id="perf-for-hardware-exploration" class="slide level2">
<h1>perf for hardware exploration?</h1>
<p>Â </p>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col-8">
<pre><code>$ perf list

List of pre-defined events (to be used in -e):

  branch-instructions OR branches                    [Hardware event]
  branch-misses                                      [Hardware event]
  bus-cycles                                         [Hardware event]
  cache-misses                                       [Hardware event]
  cache-references                                   [Hardware event]
  cpu-cycles OR cycles                               [Hardware event]
  instructions                                       [Hardware event]
  ref-cycles                                         [Hardware event]
  stalled-cycles-frontend OR idle-cycles-frontend    [Hardware event]
  #...
  L1-dcache-load-misses                              [Hardware cache event]
  L1-dcache-loads                                    [Hardware cache event]
  L1-dcache-prefetch-misses                          [Hardware cache event]
  L1-dcache-store-misses                             [Hardware cache event]
  L1-dcache-stores                                   [Hardware cache event]
  L1-icache-load-misses                              [Hardware cache event]
  #...</code></pre>
</div>
<div class="col-4">
<ul>
<li>perf event list depends on kernel version</li>
<li>hardware counters are not portable (specification change by vendors)</li>
<li>alternative: <a href="https://github.com/andikleen/pmu-tools">ocperf</a></li>
</ul>
</div>
</div>
</div>
</section><section id="test-hypothesis-with-likwid" class="slide level2">
<h1>Test hypothesis with <a href="https://github.com/RRZE-HPC/likwid">likwid</a></h1>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<figure>
<img src="img/likwid-repo.png" alt="github.com/RRZE-HPC/likwid" class="figure-img img-fluid" style="width:100.0%" /><figcaption><a href="https://github.com/RRZE-HPC/likwid">github.com/RRZE-HPC/likwid</a></figcaption>
</figure>
</div>
</div>
</div>
<div class="container-fluid">
<div class="row align-items-start">
<div class="col">
<ul>
<li>open source Performance monitoring and benchmarking suite</li>
<li>Linux only</li>
</ul>
</div>
<div class="col">
<ul>
<li>profiling through hardware counters (consistent meta markers for portability)</li>
<li>exploration through monitoring</li>
<li>marker API for C, C++, java and python</li>
</ul>
</div>
</div>
</div>
</section><section id="use-case-index-lists" class="slide level2">
<h1>use case: Index Lists</h1>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<pre><code>#include &lt;vector&gt;
#include &quot;omp.h&quot;

struct item 
{
    std::vector&lt;float&gt; position, momentum;
    std::vector&lt;int&gt;   nearest_neighbors;
}

int main(int argc, char** argv){

    std::vector&lt;item&gt; world = generate(argc*10e6);
    
    for(int&amp; time_step : timelapse){
        
        update(world);
        
        #pragma omp parallel for
        for(item&amp; it : world){
            
            for(int&amp; index : it.nearest_neighbors){
            
                auto distance = calculate(it, world[index]);
                if(distance &gt; threshold)
                    it.nearest_neighbors.remove(index);
                
            }
        }
    }
    //store results
}</code></pre>
</div>
<div class="col">
<ul>
<li>code has a lot of problems related to memory layout</li>
<li>index of nearest neighbor <code>item</code> stored in vector</li>
<li><p><strong>hypotheses</strong>:</p>
<ul>
<li><p>large 'unpredictable' jumps in memory access deminishes cache bandwidth</p></li>
<li><p><a href="https://en.wikipedia.org/wiki/False_sharing">false sharing</a> forces cache line reloads as read-only and writable items may share the same cache line</p></li>
</ul></li>
</ul>
<div class="fragment">
<p>Let's measure!</p>
</div>
</div>
</div>
<aside class="notes">
<ul>
<li>only show measurement for false sharing for brevity</li>
</ul>
</aside>
</div>
</section><section id="use-case-through-likwid" class="slide level2">
<h1>use case: Through Likwid</h1>
<div class="container-fluid">
<div class="row align-items-start">
<div class="col-6">
<p>Use Case</p>
<pre><code># export OMP_NUM_THREADS=1
# path/to/likwid-perfctr -f -c 0 -g FALSE_SHARE numactl \
-m0 -C0 ./my_app
+----------------------------------|--------------+
|              Metric              |    Core 0    |
+----------------------------------|--------------+
|        Runtime (RDTSC) [s]       |      11.2125 |
|       Runtime unhalted [s]       |      17.7696 |
|            Clock [MHz]           |    3536.3990 |
|                CPI               |       0.4700 |
|  Local LLC false sharing [MByte] |       0.0008 |
|   Local LLC false sharing rate   | 5.608215e-10 |
| Remote LLC false sharing [MByte] |       0.0001 |
|   Remote LLC false sharing rate  | 8.628023e-11 |
+----------------------------------|--------------+

# export OMP_NUM_THREADS=4
# path/to/likwid-perfctr -f -c 0-4 -g FALSE_SHARE numactl \
-m0 -C0-3 ./my_app
+---------------------------------------|--------------|
|                 Metric                |      Sum     |
+---------------------------------------|--------------|
|        Runtime (RDTSC) [s] STAT       |      32.5048 |
|       Runtime unhalted [s] STAT       |      31.8024 |
|            Clock [MHz] STAT           |    9484.2143 |
|                CPI STAT               |       3.2922 |
|  Local LLC false sharing [MByte] STAT |    2973.7637 |
|   Local LLC false sharing rate STAT   |       0.0081 |
| Remote LLC false sharing [MByte] STAT |       0.0007 |
|   Remote LLC false sharing rate STAT  | 1.781667e-09 |
+---------------------------------------|--------------|</code></pre>
</div>
<div class="col-6">
<p>Stream Benchmark as Reference</p>
<pre><code># export OMP_NUM_THREADS=1
# path/to/likwid-perfctr -f -c 0 -g FALSE_SHARE numactl \
-m0 -C0 ./stream
+----------------------------------|--------------+
|              Metric              |    Core 0    |
+----------------------------------|--------------+
|        Runtime (RDTSC) [s]       |      15.3517 |
|       Runtime unhalted [s]       |      24.1526 |
|            Clock [MHz]           |    3580.4732 |
|                CPI               |       1.0501 |
|  Local LLC false sharing [MByte] |       0.0006 |
|   Local LLC false sharing rate   | 6.057282e-10 |
| Remote LLC false sharing [MByte] |       0.0006 |
|   Remote LLC false sharing rate  | 6.057282e-10 |
+----------------------------------|--------------+

# export OMP_NUM_THREADS=4
# path/to/likwid-perfctr -f -c 0-4 -g FALSE_SHARE numactl \
-m0 -C0-3 ./stream
+---------------------------------------|--------------|
|                 Metric                |      Sum     |
+---------------------------------------|--------------|
|        Runtime (RDTSC) [s] STAT       |      19.1140 |
|       Runtime unhalted [s] STAT       |      25.9206 |
|            Clock [MHz] STAT           |   12688.3579 |
|                CPI STAT               |       4.5057 |
|  Local LLC false sharing [MByte] STAT |       0.1067 |
|   Local LLC false sharing rate STAT   | 4.080027e-07 |
| Remote LLC false sharing [MByte] STAT |       0.0012 |
|   Remote LLC false sharing rate STAT  | 4.438572e-09 |
+---------------------------------------|--------------|</code></pre>
</div>
</div>
</div>
</section><section id="bottom-line" class="slide level2">
<h1>Bottom Line</h1>
<div class="container-fluid">
<div class="row align-items-center">
<div class="col">
<ul>
<li>excellent tools available to find hot spots</li>
<li>once found, talk to someone<br />
(rubber duck or colleaque(s))</li>
<li>create falsifyable hypothesis</li>
<li>MEASURE!</li>
</ul>
</div>
<div class="col">
<figure>
<img src="img/rubber_duck_with_glasses.jpg" alt="&quot;Rubber Duckie, You&#39;re the One&quot;, by Daniel Rothamel, CC-BY 2.0" class="figure-img img-fluid" style="width:100.0%" /><figcaption><a href="https://www.flickr.com/photos/realestatezebra/2608418319">&quot;Rubber Duckie, You're the One&quot;, by Daniel Rothamel, CC-BY 2.0</a></figcaption>
</figure>
</div>
</div>
</div>
<aside class="notes">
<ul>
<li>NEXT: let's find alternative code paths (algorithms/technology)</li>
</ul>
</aside>
</section></section>
<section><section id="benchmarks-and-how-to-create-them" class="titleslide slide level1"><h1>Benchmarks and how to create them</h1></section><section id="chrono-is-your-friend" class="slide level2">
<h1>chrono is your friend</h1>
</section></section>
      </div>
    </div>


    <script src="lib/js/head.min.js"></script>
    <script src="js/reveal.js"></script>

    <script>

      // Full list of configuration options available here:
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
      controls: false,
      progress: true,
      history: true,
      center: true,
      
      slideNumber: true,
      // The "normal" size of the presentation, aspect ratio will be preserved
      // when the presentation is scaled to fit different resolutions. Can be
      // specified using percentage units.
      width: 1920,
      height: 1080,

      // Factor of the display size that should remain empty around the content
      margin: 0.01,

      // Bounds for smallest/largest possible scale to apply to content
      minScale: 0.2,
      maxScale: 1.5,

      theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
      transition: 'slide', // default/cube/page/concave/zoom/linear/fade/none

      // Optional libraries used to extend on reveal.js
      dependencies: [
      { src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
            { src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
            { src: 'plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
      { src: 'plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }//,
      //          { src: 'plugin/search/search.js', async: true, condition: function() { return !!document.body.classList; }, }
      //          { src: 'plugin/remotes/remotes.js', async: true, condition: function() { return !!document.body.classList; } }
      ]});
    </script>
      </body>
</html>
